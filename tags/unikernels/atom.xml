<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>mort’s mythopœia - unikernels</title>
    <subtitle>with apologies</subtitle>
    <link rel="self" type="application/atom+xml" href="https://mort.io/tags/unikernels/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://mort.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-04-05T00:00:00+00:00</updated>
    <id>https://mort.io/tags/unikernels/atom.xml</id>
    <entry xml:lang="en">
        <title>Rewarding influence</title>
        <published>2025-04-05T00:00:00+00:00</published>
        <updated>2025-04-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/happy-day/"/>
        <id>https://mort.io/blog/happy-day/</id>
        
        <content type="html" xml:base="https://mort.io/blog/happy-day/">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;2025.eurosys.org&#x2F;index.html&quot;&gt;EuroSys 2025&lt;&#x2F;a&gt; was co-located with &lt;a href=&quot;https:&#x2F;&#x2F;www.asplos-conference.org&#x2F;asplos2025&#x2F;&quot;&gt;ASPLOS
2025&lt;&#x2F;a&gt; this year. Other
commitments meant I (again) couldn’t stay for the whole conference, attending
primarily because &lt;a href=&quot;..&#x2F;tdis-accepted&quot;&gt;two students had papers in the TDIS
workshop&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
 &lt;img src=&quot;stage.jpg&quot; class=&quot;fl pd1&quot; alt=&quot;A photograph of me in a yellow t-shirt receiving the award&quot; width=&quot;480&quot; height=&quot;1&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;p&gt;But happily I &lt;em&gt;was&lt;&#x2F;em&gt; able to stay for the first day of the conference –
“happily” not only because it gave me a chance to catch up with some old friends
I hadn’t seen in a decade or more, but also because &lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1145&#x2F;2451116.2451167&quot;&gt;the Mirage unikernels
paper&lt;&#x2F;a&gt; which appeared at &lt;a href=&quot;http:&#x2F;&#x2F;asplos13.rice.edu&#x2F;&quot;&gt;ASPLOS
2013&lt;&#x2F;a&gt; won one of two &lt;a href=&quot;https:&#x2F;&#x2F;www.asplos-conference.org&#x2F;asplos2025&#x2F;awards&#x2F;&quot;&gt;ASPLOS 2025 Influential Papers
awards&lt;&#x2F;a&gt; :)&lt;&#x2F;p&gt;
&lt;p&gt;This is obviously very flattering – typically doing research is necessarily its
own reward because the work can seem fruitless much of the time. Even when a
paper gets written and submitted it will most likely be rejected – I think
EuroSys this year reported something like a 12% acceptance rate, so rejection is
&lt;em&gt;a priori&lt;&#x2F;em&gt; the most likely outcome. Finally, if the paper does finally get
accepted, it will most likely sink without trace – perhaps a brief flurry of
interest for a few months or so, the paper gets cited a few times, and then it
fades away. This seems inevitable in a reasonably fast moving field that is also
growing at pace – EuroSys had ~160 attendees in 2006, growing to ~330 in the 10
years to 2016, but hitting ~1100 this year; while submissions grew from ~200 in
2019 to 696 this year.&lt;&#x2F;p&gt;
 &lt;img src=&quot;official.jpg&quot; class=&quot;fr pd1&quot; alt=&quot;A photograph of the certificate&quot; width=&quot;320&quot; height=&quot;1&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;p&gt;So to win an award recognising that others feel a paper actually had some
influence is rare, and makes me very happy :) At the same time, it reinforces a
couple of lessons that I really should’ve internalised by now.&lt;&#x2F;p&gt;
&lt;p&gt;The first is that papers inevitably get better for thoughtful considered
feedback from experts a step or several away from the work – so drafts should
be produced in plenty of time and distributed to anyone who’s willing to take
the time for feedback. In the case of this paper the previous failed submission
to &lt;a href=&quot;https:&#x2F;&#x2F;www.usenix.org&#x2F;conference&#x2F;osdi12&quot;&gt;OSDI 2012&lt;&#x2F;a&gt; had, let’s say, reviews
of mixed quality. But one stood out, from Jon Howell (who signs his reviews so I
know it was him), who gave us a firm “reject” which (in retrospect) was actually
fairly well-deserved but in an incredibly constructive way. To paraphrase him
slightly, the work was interesting but the paper was crap – &lt;em&gt;and here’s how to
rewrite it so it makes sense&lt;&#x2F;em&gt;. We basically did what he said, ASPLOS accepted
it, and the rest is now history. (Over a decade ago, good grief.)&lt;&#x2F;p&gt;
&lt;p&gt;The second is that I simply cannot predict whether any research I’m doing is
actually going to turn out to have any value. The only other equivalent award
I’ve had was an &lt;a href=&quot;https:&#x2F;&#x2F;infocom2024.ieee-infocom.org&#x2F;awards&quot;&gt;INFOCOM 2024 Test of Time
award&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1109&#x2F;INFCOM.2012.6195845&quot;&gt;our 2012 paper on a
system called &lt;em&gt;Thinkair&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;, about
mobile-code offload from devices to the cloud. That paper had received
considerably more than just one rejection prior to acceptance, and if I recall
my final contribution correctly, I recommended not submitting it to INFOCOM as I
didn’t think we’d done enough to address previous review comments.&lt;&#x2F;p&gt;
&lt;p&gt;Shows what I know. But then, how boring would life be without a little
ignorance… :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Quelle dommage</title>
        <published>2017-11-05T00:00:00+00:00</published>
        <updated>2017-11-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/quelle-dommage/"/>
        <id>https://mort.io/blog/quelle-dommage/</id>
        
        <content type="html" xml:base="https://mort.io/blog/quelle-dommage/">&lt;blockquote&gt;
&lt;p&gt;Ed: this tool is perhaps less relevant now that both
&lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&#x2F;&quot;&gt;Mirage&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;ocaml.org&#x2F;opam&#x2F;&quot;&gt;OPAM&lt;&#x2F;a&gt; have moved
on. But perhaps it’ll be resurrected one day so here it is.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Largely because I wanted to make a feeble attempt at a French pun,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;dommage&#x2F;&quot;&gt;&lt;code&gt;dommage&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is a tool for
&lt;a href=&quot;https:&#x2F;&#x2F;docker.com&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt; containerising Mirage unikernels. From the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;dommage&quot;&gt;README&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dommage-dockerised-mirage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dommage-dockerised-mirage&quot; aria-label=&quot;Anchor link for: dommage-dockerised-mirage&quot;&gt;Dommage, Dockerised Mirage&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;dommage&lt;&#x2F;code&gt; is a shell script that wraps the &lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&quot;&gt;Mirage&lt;&#x2F;a&gt; CLI to make use of Docker
containers meaning that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;you can cache the OPAM build artefacts in the container image, speeding up
local builds;&lt;&#x2F;li&gt;
&lt;li&gt;you can re-use the build container image in Travis builds by publishing it,
speeding those up considerably; and&lt;&#x2F;li&gt;
&lt;li&gt;you can easily test build &lt;code&gt;-t xen&lt;&#x2F;code&gt; targets on OSX.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I’ve tried to minimise interference with the normal operation of &lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&quot;&gt;Mirage&lt;&#x2F;a&gt; CLI so
simply replacing &lt;code&gt;mirage&lt;&#x2F;code&gt; with &lt;code&gt;dommage&lt;&#x2F;code&gt; is supposed to work. To publish the
resulting container image, &lt;code&gt;dommage publish &amp;lt;image&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Issues, comments, suggestions and bug fixes all welcome!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;operation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#operation&quot; aria-label=&quot;Anchor link for: operation&quot;&gt;Operation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;To start, &lt;code&gt;dommage&lt;&#x2F;code&gt; provides a few management commands to manipulate the build
container:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dommage init BASE-IMAGE&lt;&#x2F;code&gt; creates a new container, based off &lt;code&gt;BASE-IMAGE&lt;&#x2F;code&gt;
from the &lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&quot;&gt;Docker Hub&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;dommage publish IMAGE&lt;&#x2F;code&gt; commits the current container and pushes it to
&lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&quot;&gt;Docker Hub&lt;&#x2F;a&gt; as &lt;code&gt;IMAGE&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;dommage destroy&lt;&#x2F;code&gt; stops and removes the current build container&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;dommage run ...&lt;&#x2F;code&gt; executes a command inside the current build container&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In addition, it wraps the main &lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&quot;&gt;Mirage&lt;&#x2F;a&gt; CLI commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dommage configure ...&lt;&#x2F;code&gt; runs &lt;code&gt;mirage configure ... &amp;amp;&amp;amp; make depends&lt;&#x2F;code&gt; inside
the build contianer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;dommage build ...&lt;&#x2F;code&gt; runs &lt;code&gt;mirage build ...&lt;&#x2F;code&gt; inside the build container&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;dommage clean ...&lt;&#x2F;code&gt; runs &lt;code&gt;mirage clean ...&lt;&#x2F;code&gt; inside the build container&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Evolving the Unikernel Revolution</title>
        <published>2016-11-10T00:00:00+00:00</published>
        <updated>2016-11-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/unikernel-revolution/"/>
        <id>https://mort.io/blog/unikernel-revolution/</id>
        
        <content type="html" xml:base="https://mort.io/blog/unikernel-revolution/">&lt;p&gt;I’ve had the pleasure of giving a couple of talks at some fun venues recently,
extolling both the virtues of &lt;a href=&quot;http:&#x2F;&#x2F;unikernel.org&#x2F;&quot;&gt;unikernels&lt;&#x2F;a&gt; and talking a bit about where we
currently see them as usefully being deployed.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, &lt;a href=&quot;https:&#x2F;&#x2F;operability.io&#x2F;&quot;&gt;Operability.io 2016&lt;&#x2F;a&gt; a couple of weeks ago was enlightening
about some of the problems faced in operating production systems. Some great
audience questions and follow-ups after the talk, including some who were even
wondering when we’ll see unikernels as ready for the desktop! Of course, with
the release of the &lt;a href=&quot;https:&#x2F;&#x2F;docker.com&#x2F;...&quot;&gt;Docker for Mac&lt;&#x2F;a&gt; and [Docker for Windows][dfw] products,
it’s arguable that we’ve beaten Linux to that accolade, as both products make
extensive use of &lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&quot;&gt;MirageOS&lt;&#x2F;a&gt; unikernel libraries. Having said that, I was
pleased to be told that the message about unikernels having a range of
deployment scenarios, and particularly partial deployments into micro-service
environments made sense to many who came to speak to me afterwards.&lt;&#x2F;p&gt;
&lt;p&gt;This was followed by a slightly expanded version of that talk earlier today at
the &lt;a href=&quot;https:&#x2F;&#x2F;devoxx.be&#x2F;&quot;&gt;Devox Belgium&lt;&#x2F;a&gt; conference. &lt;a href=&quot;https:&#x2F;&#x2F;devoxx.be&#x2F;&quot;&gt;Devoxx&lt;&#x2F;a&gt; is primarily a Java community
so I was interested to see how the talk would go down given that &lt;a href=&quot;https:&#x2F;&#x2F;mirage.io&quot;&gt;MirageOS&lt;&#x2F;a&gt; is
staunchly OCaml-centric, and the &lt;a href=&quot;http:&#x2F;&#x2F;unikernel.org&#x2F;&quot;&gt;unikernels&lt;&#x2F;a&gt; movement in general is language
specific and (at least until now) somewhat weighted toward functional
programming, our good friends at &lt;a href=&quot;http:&#x2F;&#x2F;www.includeos.org&#x2F;&quot;&gt;IncludeOS&lt;&#x2F;a&gt; notwithstanding. In the end it
seemed to go pretty well, based on what little I could see through the bright
lights– maybe one day I’ll get used to that when being videoed! Certainly some
good questions again, on the specific utility of unikernels to IoT, the
relationship between unikernels and Docker, and more besides.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, I hope anyone who came to either talk enjoyed it and found it
interesting. Happy to respond to comments or questions via email or
on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mort___&quot;&gt;Twitter&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Fame and Fortune!</title>
        <published>2015-06-24T00:00:00+00:00</published>
        <updated>2015-06-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/bigtechday-mirage/"/>
        <id>https://mort.io/blog/bigtechday-mirage/</id>
        
        <content type="html" xml:base="https://mort.io/blog/bigtechday-mirage/">&lt;p&gt;After a slew of HDI related items, a quick &lt;a href=&quot;http:&#x2F;&#x2F;openmirage.org&#x2F;&quot;&gt;MirageOS&lt;&#x2F;a&gt; note. I was invited to
give a presentation on MirageOS at the &lt;a href=&quot;https:&#x2F;&#x2F;www.tngtech.com&#x2F;en.html&quot;&gt;TNG&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.tngtech.com&#x2F;en&#x2F;big-techday.html&quot;&gt;Big TechDay 8&lt;&#x2F;a&gt; conference. This
was an interesting, and very broad based, event. It brought together about 500
people with about 25 speakers over one day, on topics from cognitive science to
AI to chess playing algorithms to obviating testing through proof reasoning.
And, of course, operating systems and &lt;a href=&quot;http:&#x2F;&#x2F;openmirage.org&#x2F;&quot;&gt;MirageOS&lt;&#x2F;a&gt;! If you’re interested, the
slides used are available at
&lt;a href=&quot;http:&#x2F;&#x2F;decks.openmirage.org&#x2F;bigtechday8&quot;&gt;decks.openmirage.org&lt;&#x2F;a&gt; in the usual
way, and if you really want to hear me droning on, TNG are making the video
(with synchronised slides)
&lt;a href=&quot;http:&#x2F;&#x2F;www.techcast.com&#x2F;events&#x2F;bigtechday8&#x2F;salvator-1130&#x2F;?q=salvator-1130&quot;&gt;available&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As ever, comments welcome!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Moving Onto Mirage</title>
        <published>2015-05-20T00:00:00+00:00</published>
        <updated>2015-05-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/moving-onto-mirage/"/>
        <id>https://mort.io/blog/moving-onto-mirage/</id>
        
        <content type="html" xml:base="https://mort.io/blog/moving-onto-mirage/">&lt;p&gt;For a little while I’ve had &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;mor1.github.io&quot;&gt;this site&lt;&#x2F;a&gt; running as a &lt;a href=&quot;http:&#x2F;&#x2F;openmirage.org&#x2F;&quot;&gt;MirageOS&lt;&#x2F;a&gt;
unikernel, shadowing the main site hosted on &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;&quot;&gt;GitHub&lt;&#x2F;a&gt;. I’ve finally decided to
make the switch, as part of moving over to take advantage of Mirage’s DNS and
TLS libraries.&lt;&#x2F;p&gt;
&lt;p&gt;Following the usual pattern, as previously explained by &lt;a href=&quot;http:&#x2F;&#x2F;amirchaudhry.com&#x2F;from-jekyll-to-unikernel-in-fifty-lines&#x2F;&quot;&gt;Amir&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;www.somerandomidiot.com&#x2F;blog&#x2F;2014&#x2F;08&#x2F;19&#x2F;i-am-unikernel&#x2F;&quot;&gt;Mindy&lt;&#x2F;a&gt; and
others, the process is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Construct a static &lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&quot;&gt;Jekyll&lt;&#x2F;a&gt; site.&lt;&#x2F;li&gt;
&lt;li&gt;Write a &lt;a href=&quot;http:&#x2F;&#x2F;travis-ci.com&#x2F;&quot;&gt;Travis&lt;&#x2F;a&gt; YAML file to cause &lt;a href=&quot;http:&#x2F;&#x2F;travis-ci.com&#x2F;&quot;&gt;Travis&lt;&#x2F;a&gt; to build the unikernel image
and commit it back to the deployment repository.&lt;&#x2F;li&gt;
&lt;li&gt;Write a Git &lt;code&gt;post-merge&lt;&#x2F;code&gt; hook for the deployment repository, so that the
latest unikernel is automatically booted when a merge is detected, i.e., there
is a new unikernel image.&lt;&#x2F;li&gt;
&lt;li&gt;Write a &lt;code&gt;cron&lt;&#x2F;code&gt; job that periodically polls the deployment repository, pulling
any changes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Building a &lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&quot;&gt;Jekyll&lt;&#x2F;a&gt; site is well-documented – I did find that I had to tweak
my &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;mor1.github.io&#x2F;blob&#x2F;master&#x2F;_config.yml&quot;&gt;&lt;code&gt;_config.yml&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; so as to make sure my local toolchain matched the
one used by Github, ensuring consistency between versions of the site. For
convenience:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;make&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; site&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;bringing-up-the-network&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bringing-up-the-network&quot; aria-label=&quot;Anchor link for: bringing-up-the-network&quot;&gt;Bringing up the network&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;mor1.github.io&#x2F;blob&#x2F;master&#x2F;.travis.yml&quot;&gt;&lt;code&gt;.travis.yml&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; file then specifies the three main targets for
the CI test build to carry out: Unix with a standard sockets backed
(&lt;code&gt;MIRAGE_BACKEND=unix&lt;&#x2F;code&gt;, &lt;code&gt;MIRAGE_NET=socket&lt;&#x2F;code&gt;) and with the Mirage network stack
(&lt;code&gt;MIRAGE_BACKEND=unix&lt;&#x2F;code&gt;, &lt;code&gt;MIRAGE_NET=direct&lt;&#x2F;code&gt;), and with the Xen backend
(&lt;code&gt;MIRAGE_BACKEND=xen&lt;&#x2F;code&gt;). For the latter case, we must also specify the static IP
configuration to be used (&lt;code&gt;MIRAGE_ADDR&lt;&#x2F;code&gt;, &lt;code&gt;..._GWS&lt;&#x2F;code&gt;, and &lt;code&gt;..._MASK&lt;&#x2F;code&gt;). The
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;mor1.github.io&#x2F;blob&#x2F;master&#x2F;.travis.sh&quot;&gt;&lt;code&gt;.travis.sh&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; script then calls the standard skeleton
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml&#x2F;ocaml-travisci-skeleton&#x2F;blob&#x2F;master&#x2F;.travis-mirage.sh&quot;&gt;&lt;code&gt;.travis-mirage.sh&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; script after first building the site
content using Jekyll.&lt;&#x2F;p&gt;
&lt;p&gt;This tests the three basic combinations of network backend for a Mirage
appliance:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; make configure.socket build&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UNIX&#x2F;socket&lt;&#x2F;strong&gt; requires no configuration. The network device is configured
with the loopback address, &lt;code&gt;127.0.0.1&lt;&#x2F;code&gt;. Appliances can be run without
requiring &lt;code&gt;root&lt;&#x2F;code&gt; privileges, assuming they only bind to non-privileged ports.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; make configure.direct build&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UNIX&#x2F;direct&#x2F;dhcp&lt;&#x2F;strong&gt; requires no configuration if a DHCP server is running and
can respond. The appliance must be run with &lt;code&gt;root&lt;&#x2F;code&gt; privileges to use the new
network bridging capability of OSX 10.10, whereupon the DHCP client in the
appliance follows the usual protocol.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; make configure.xen build &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  ADDR=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;46.43.42.137&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; GWS=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;46.43.42.129&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; MASK=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;255.255.255.128&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Xen&lt;&#x2F;strong&gt; uses the Mirage network stack and expects static configuration of the
network device.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;using-travis-ci&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#using-travis-ci&quot; aria-label=&quot;Anchor link for: using-travis-ci&quot;&gt;Using Travis CI&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Of course, all that is for local development – for the live site, this is
actually all wrapped up using &lt;a href=&quot;http:&#x2F;&#x2F;travis-ci.com&#x2F;&quot;&gt;Travis CI&lt;&#x2F;a&gt;. Due to a small pull request
waiting on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml&#x2F;ocaml-travisci-skeleton&quot;&gt;OCaml Travis CI skeleton scripts&lt;&#x2F;a&gt; and a few
Mirage releases currently being readied, this looks a little more complex than
it needs to (the &lt;code&gt;FORK_USER&lt;&#x2F;code&gt; and &lt;code&gt;DEV_REMOTE&lt;&#x2F;code&gt; variables shouldn’t need to be
specified in the long run) but anyway:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;language&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;c&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;script&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;bash -ex .travis.sh&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;env&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;FORK_USER=mor1 DEV_REMOTE=git:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-dev&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;OCAML_VERSION=4.02 MIRAGE_BACKEND=unix MIRAGE_NET=socket&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;FORK_USER=mor1 DEV_REMOTE=git:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-dev&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;OCAML_VERSION=4.02 MIRAGE_BACKEND=unix MIRAGE_NET=direct&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;FORK_USER=mor1 DEV_REMOTE=git:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-dev&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;UPDATE_GCC_BINUTILS=1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;OCAML_VERSION=4.02 MIRAGE_BACKEND=xen&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;MIRAGE_ADDR=&amp;quot;46.43.42.137&amp;quot; MIRAGE_GWS=&amp;quot;46.43.42.129&amp;quot; MIRAGE_MASK=&amp;quot;255.255.255.128&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;XENIMG=mortio MIRDIR=_mirage DEPLOY=1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This uses the local &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mor1&#x2F;mor1.github.io&#x2F;blob&#x2F;master&#x2F;.travis.sh&quot;&gt;&lt;code&gt;.travis-sh&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; script to build the three versions
of the site, using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-dev&quot;&gt;Mirage development OPAM repository&lt;&#x2F;a&gt; so as to
pick up the latest versions of all the various packages, and updating the Travis
&lt;code&gt;gcc&lt;&#x2F;code&gt; and &lt;code&gt;binutils&lt;&#x2F;code&gt; to ensure the stubs for a couple of packages (notably
&lt;code&gt;mirage-entropy-xen&lt;&#x2F;code&gt;) build.&lt;&#x2F;p&gt;
&lt;p&gt;Next stop: adding TLS and DNS support…&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Begin, Again!</title>
        <published>2015-01-15T00:00:00+00:00</published>
        <updated>2015-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Richard Mortier
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mort.io/blog/begin-again/"/>
        <id>https://mort.io/blog/begin-again/</id>
        
        <content type="html" xml:base="https://mort.io/blog/begin-again/">&lt;p&gt;Specifically, I’ve left &lt;a href=&quot;http:&#x2F;&#x2F;www.horizon.ac.uk&quot;&gt;Horizon&lt;&#x2F;a&gt; and the
&lt;a href=&quot;http:&#x2F;&#x2F;www.cs.nott.ac.uk&quot;&gt;School of Computer Science&lt;&#x2F;a&gt; at the
&lt;a href=&quot;http:&#x2F;&#x2F;www.nottingham.ac.uk&quot;&gt;University of Nottingham&lt;&#x2F;a&gt; to (re-)join the
&lt;a href=&quot;http:&#x2F;&#x2F;www.cam.ac.uk&quot;&gt;Cambridge University&lt;&#x2F;a&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.cl.cam.ac.uk&quot;&gt;Computer Laboratory&lt;&#x2F;a&gt;. In celebration, and frankly
because it was long overdue anyway, I’ve reworked my website. What do you think?&lt;&#x2F;p&gt;
&lt;p&gt;For the curious, or the technically inclined, the site now uses
&lt;a href=&quot;http:&#x2F;&#x2F;foundation.zurb.com&#x2F;&quot;&gt;ZURB Foundation&lt;&#x2F;a&gt; 5.5.0 (the current downloadable release as of
yesterday), with some slightly customised CSS. The site itself is largely
written in &lt;a href=&quot;http:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;&quot;&gt;Markdown&lt;&#x2F;a&gt; and currently generated using
&lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;Jekyll&lt;&#x2F;a&gt; to be hosted on &lt;a href=&quot;http:&#x2F;&#x2F;github.com&quot;&gt;Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It’s actually gone through an interim phase where it was parsed by the OCaml
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pw347&#x2F;omd&quot;&gt;OMD&lt;&#x2F;a&gt; parser before being crunched into a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-types&quot;&gt;Mirage KV_RO&lt;&#x2F;a&gt;
filesystem which is then compiled into a type-safe, self-contained web appliance
that serves these pages and no other using the OCaml &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;cowabloga&quot;&gt;Cowabloga&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;ocaml-cow&quot;&gt;COW&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;ocaml-cohttp&quot;&gt;CoHTTP&lt;&#x2F;a&gt; libraries. This could either be run as a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-platform&#x2F;tree&#x2F;master&#x2F;unix&quot;&gt;POSIX binary&lt;&#x2F;a&gt;
or a self-contained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;mirage-platform&#x2F;tree&#x2F;master&#x2F;xen&quot;&gt;Xen VM&lt;&#x2F;a&gt; depending on what I felt like. Neat eh?
(And for the sceptical among you, yes, a thing &lt;em&gt;can&lt;&#x2F;em&gt; be neat and yet appear
curiously over-engineered at the same time… :)&lt;&#x2F;p&gt;
&lt;p&gt;For the time being however, I’m using it as an excuse to think about what I
might do to better support site generation like this in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirage&#x2F;cowabloga&quot;&gt;Cowabloga&lt;&#x2F;a&gt; so that I
can more seamlessly switch between &lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;Jekyll&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;openmirage.org&#x2F;&quot;&gt;Mirage&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
